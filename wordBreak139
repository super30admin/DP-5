class Solution {
    
    public boolean wordBreak(String s, List<String> wordDict) {
        
        //139. Word Break
        //Time complexity : O(n^3)
        //Space compleixty : O(n)
        
        if(s == null || s.length() ==0)
            return false;
        
        HashSet<String> set = new HashSet<>(wordDict);
        int len = s.length();
        boolean[] dp = new boolean[len+1];
        dp[0] =true;
        
        for(int i=1;i<dp.length;i++){           //n
            for(int j=0;j<i ;j++){              //n
                if(dp[j] && set.contains(s.substring(j,i))){        //n
                     dp[i] =true;
                     break; 
                }
                   
                    
            }
        }
        return dp[dp.length-1];   //value at last index tells if the string can be                                          segemented
    }
}